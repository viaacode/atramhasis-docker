###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:atramhasis

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar
    pyramid_tm
jinja2.trim_blocks = true
jinja2.lstrip_blocks = true
jinja2.directories =
	atramhasis:templates
jinja2.extensions =
    jinja2.ext.do
jinja2.filters =
    label_sort = atramhasis.utils.label_sort
available_languages = nl en fr

skosprovider.skosregistry_location = request
skosprovider.skosregistry_factory = atramhasis.skos.create_registry

# cache
cache.tree.backend = dogpile.cache.memory
cache.tree.arguments.cache_size = 5000
cache.tree.expiration_time = 7000

cache.list.backend = dogpile.cache.memory
cache.list.arguments.cache_size = 5000
cache.list.expiration_time = 7000

# base url needed for generating sitemaps
atramhasis.url = http://localhost:6543

sqlalchemy.url = sqlite:///%(here)s/atramhasis.sqlite
# sqlalchemy.url = postgresql://postgres:postgres@localhost:5432/atramhasis

atramhasis.session_factory.secret = itsaseekreet

# Filesystem location to dump exports
atramhasis.dump_location = %(here)s/datadumps

# Location of rdf2hdt executable
atramhasis.rdf2hdt = /link/to/rdf2hdt

# Assume an LDF server is present?
# atramhasis.ldf.enabled = True

# Location of the config file for the LDF server
# atramhasis.ldf.config_location = %(here)s

# External url of the LDF server
# atramhasis.ldf.baseurl = http://demo.atramhasis.org/ldf

# Protocol the LDF server is operating under.
# See the LDF docs for more info
# atramhasis.ldf.protocol = http

# Run dojo from source (src) or distribution (dist)
# If unspecified, defaults to src.
dojo.mode = src

# The Twitter @username the card should be attributed to.
twitter.site =

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

# Enter your tracking snippet
tracking_snippet = <!-- Google Analytics -->
    <script type="text/javascript">
    (function(i,s,o,g,r,a,m){i["GoogleAnalyticsObject"]=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,"script","//www.google-analytics.com/analytics.js","ga");

    ga("create", "some_key", "auto");
    ga("set", "forceSSL", true);
    ga("send", "pageview");
    </script>
    <!-- End Google Analytics -->

layout.focus_conceptschemes =
  HERITAGETYPE
  PERIOD
  GEOGRAPHY
  MATERIALS

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, atramhasis, sqlalchemy, requests

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_atramhasis]
level = DEBUG
handlers =
qualname = atramhasis

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_requests]
level = DEBUG
handlers = 
qualname = requests

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s